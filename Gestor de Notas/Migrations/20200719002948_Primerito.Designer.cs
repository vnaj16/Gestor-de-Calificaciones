// <auto-generated />
using Gestor_de_Notas.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestor_de_Notas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200719002948_Primerito")]
    partial class Primerito
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gestor_de_Notas.Model.Campo", b =>
                {
                    b.Property<string>("CampoTipo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CampoNumero")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("CampoDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CampoNota")
                        .HasColumnType("real");

                    b.Property<float>("CampoPeso")
                        .HasColumnType("real");

                    b.Property<bool>("CampoRellenado")
                        .HasColumnType("bit");

                    b.HasKey("CampoTipo", "CampoNumero", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("Campo");
                });

            modelBuilder.Entity("Gestor_de_Notas.Model.Ciclo", b =>
                {
                    b.Property<int>("CicloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CicloCantidadCursos")
                        .HasColumnType("int");

                    b.Property<float>("CicloPromedio")
                        .HasColumnType("real");

                    b.Property<float>("CicloPromedioBeca")
                        .HasColumnType("real");

                    b.HasKey("CicloId");

                    b.ToTable("Ciclo");
                });

            modelBuilder.Entity("Gestor_de_Notas.Model.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CicloId")
                        .HasColumnType("int");

                    b.Property<int>("CursoCantidadCampos")
                        .HasColumnType("int");

                    b.Property<string>("CursoCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CursoCreditos")
                        .HasColumnType("int");

                    b.Property<string>("CursoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CursoPromedio")
                        .HasColumnType("real");

                    b.Property<int>("CursoVez")
                        .HasColumnType("int");

                    b.HasKey("CursoId");

                    b.HasIndex("CicloId");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Gestor_de_Notas.Model.Campo", b =>
                {
                    b.HasOne("Gestor_de_Notas.Model.Curso", "Curso")
                        .WithMany("Campos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestor_de_Notas.Model.Curso", b =>
                {
                    b.HasOne("Gestor_de_Notas.Model.Ciclo", "Ciclo")
                        .WithMany("Cursos")
                        .HasForeignKey("CicloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
